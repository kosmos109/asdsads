using System;
using System.Collections.Generic;
using System.IO;

class CakeOrder
{
    private Dictionary<string, string> orderDetails = new Dictionary<string, string>();
    private Dictionary<string, List<string>> menuOptions = new Dictionary<string, List<string>>
    {
        { "Форма торта", new List<string> { "Круглая", "Квадратная", "Сердце" } },
        { "Размер торта", new List<string> { "Маленький", "Средний", "Большой" } },
        { "Вкус торта", new List<string> { "Шоколадный", "Ванильный", "Фруктовый" } },
        { "Глазурь торта", new List<string> { "Шоколадная", "Ванильная", "Фруктовая" } },
        { "Декор торта", new List<string> { "Ягоды", "Цветы", "Шоколадные фигуры" } },
    };

    public void StartOrder()
    {
        bool isOrdering = true;

        while (isOrdering)
        {
            Console.Clear();
            Console.WriteLine("Выберите пункт меню:");
            int index = 1;
            foreach (var option in menuOptions.Keys)
            {
                Console.WriteLine($"{index}. {option}");
                index++;
            }
            Console.WriteLine($"{index}. Завершить заказ и сохранить");
            Console.WriteLine($"{index + 1}. Отменить заказ и выйти");

            var choice = Console.ReadKey(true).Key;
            if (choice >= ConsoleKey.D1 && choice <= ConsoleKey.D0 + menuOptions.Count)
            {
                int optionIndex = (int)choice - (int)ConsoleKey.D0 - 1;
                string option = menuOptions.Keys.ToArray()[optionIndex];
                ChooseOption(option);
            }
            else if (choice == ConsoleKey.D0 + menuOptions.Count + 1)
            {
                CompleteOrder();
                isOrdering = false;
            }
            else if (choice == ConsoleKey.D0 + menuOptions.Count + 2)
            {
                Console.WriteLine("Заказ отменен.");
                isOrdering = false;
            }
            else
            {
                Console.WriteLine("Неверный выбор. Пожалуйста, попробуйте снова.");
            }
        }
    }

    private void ChooseOption(string option)
    {
        Console.Clear();
        Console.WriteLine($"Выберите {option.ToLower()}:");
        int index = 1;
        foreach (var subOption in menuOptions[option])
        {
            Console.WriteLine($"{index}. {subOption}");
            index++;
        }

        var choice = Console.ReadKey(true).Key;
        if (choice >= ConsoleKey.D1 && choice <= ConsoleKey.D0 + menuOptions[option].Count)
        {
            int subOptionIndex = (int)choice - (int)ConsoleKey.D0 - 1;
            string subOption = menuOptions[option][subOptionIndex];
            orderDetails[option] = subOption;
            Console.WriteLine($"{option}: {subOption} выбрано.");
        }
        else
        {
            Console.WriteLine("Неверный выбор. Пожалуйста, попробуйте снова.");
        }
        Console.WriteLine("Информация сохранена, нажмите любую кнопку, чтобы выйти в меню");
        Console.ReadKey();
    }

    private void CompleteOrder()
    {
        CalculateTotalPrice();
        SaveOrderToFile();
        Console.WriteLine("Заказ завершен. Информация сохранена.");
    }

    private void CalculateTotalPrice()
    {
        int totalPrice = 0;
        foreach (var option in orderDetails.Keys)
        {
            // Не хотел делать акцент на ценах, пусть каждый выбранный пункт будет +50
            totalPrice += 50;
        }
        orderDetails["Цена"] = totalPrice.ToString();
    }

    private void SaveOrderToFile()
    {
        string fileName = "C:\\Users\\Коля\\Desktop\\Заказ.txt";

        try
        {
            using (StreamWriter writer = new StreamWriter(fileName, true))
            {
                foreach (var detail in orderDetails)
                {
                    writer.WriteLine($"{detail.Key}: {detail.Value}");
                }
                writer.WriteLine("------------------------------");
            }
        }
        catch (IOException e)
        {
            Console.WriteLine($"Ошибка при сохранении заказа: {e.Message}");
        }
    }
}
class Program
{
    static void Main(string[] args)
    {
        CakeOrder cakeOrder = new CakeOrder();
        bool isOrdering = true;

        while (isOrdering)
        {
            Console.Clear();
            Console.WriteLine("Приветствую вас в моей классной кондитерской!");
            Console.WriteLine("1. Заказать тортик ");
            Console.WriteLine("2. Выйти((");

            var choice = Console.ReadKey(true).Key;
            switch (choice)
            {
                case ConsoleKey.D1:
                    cakeOrder.StartOrder();
                    break;
                case ConsoleKey.D2:
                    isOrdering = false;
                    Console.WriteLine("До свидания(((");
                    break;
                default:
                    Console.WriteLine("Неверный выбор. Пожалуйста, попробуйте снова.");
                    break;
            }
        }
    }
}
